# NAME

Pod::Elemental::Transformer::Graph::Easy - graphs in your docs

# VERSION

version 0.01

# SYNOPSIS

    use Pod::Elemental;
    use Pod::Elemental::Transformer::Pod5;
    use Pod::Elemental::Transformer::Graph::Easy;

    my $pod = <<END;
    =head1 Play that funky music

    =for grapheasy
    ( Boots. Cats. Boots. Cats.:
      [boots] --> [Abyssinians]
      [boots] --> [Bengals]
    )

    =begin grapheasy

    ( Bees! Bees! Bees!:
      [bumble]    <- buzz -> [carpenter]
      [carpenter] <- buzz -> [honey]
      [honey]     <- buzz -> [bumble]
    )

    =end grapheasy
    END

    my $doc = Pod::Elemental->read_string($pod);
    Pod::Elemental::Transformer::Pod5->new->transform_node($doc);
    Pod::Elemental::Transformer::Graph::Easy->new->transform_node($doc);
    print $doc->as_pod_string;

# DESCRIPTION

Processes `grapheasy` POD regions with [Graph::Easy](https://metacpan.org/pod/Graph::Easy) to generate ASCII graphs.
All Graph::Easy directives may be used.

The [SYNOPSIS](https://metacpan.org/pod/SYNOPSIS) generates this:

    =pod

    =head1 Play that funky music

      + - - - - - - - - - - - - - - - - - - - - - - - - - -+
      ' Boots. Cats. Boots. Cats.:                         '
      '                                                    '
      ' +--------------------------+       +-------------+ '
      ' |          boots           | ----> | Abyssinians | '
      ' +--------------------------+       +-------------+ '
      '   |                                                '
      '   |                           - - - - - - - - - - -+
      '   |                          '
      '   |                          '
      '   v                          '
      ' +--------------------------+ '
      ' |         Bengals          | '
      ' +--------------------------+ '
      '                              '
      + - - - - - - - - - - - - - - -+

      + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
      ' Bees! Bees! Bees!:                                             '
      '                                                                '
      '                      buzz                                      '
      '   +----------------------------------------------------+       '
      '   v                                                    v       '
      ' +------------------+  buzz    +-----------+  buzz    +-------+ '
      ' |      bumble      | <------> | carpenter | <------> | honey | '
      ' +------------------+          +-----------+          +-------+ '
      '                                                                '
      + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+

    =cut

# ATTRIBUTES

## format\_name \[default: grapheasy\]

In POD, this is the token after `=begin`, `=end`, and `=for`.

## parser \[default: a Graph::Easy::Parser instance\]

Handles the graph conversion.

# METHODS

## transform\_node

Given a POD node, walks the tree of children looking for grapheasy nodes, and converts them.

## convert\_to\_ascii

Given input text for graph-easy, returns its ASCII representation.

# SEE ALSO

[Graph::Easy](https://metacpan.org/pod/Graph::Easy)
[Pod::Weaver](https://metacpan.org/pod/Pod::Weaver)

# AUTHOR

Joshua Keroes <joshua@cpan.org>

# COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by Joshua Keroes.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
